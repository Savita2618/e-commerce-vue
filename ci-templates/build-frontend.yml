# frontend/build-frontend.yml
# Template sp√©cialis√© pour frontend Vue.js avec Nginx

build-frontend:
  stage: build
  image: docker:24-dind
  services:
    - docker:24-dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - echo "üñ•Ô∏è Build optimis√© frontend Vue.js avec Nginx et PWA..."
    - cd frontend
    - |
      PROJECT_NAME_LOWER=$(echo $CI_PROJECT_PATH | tr '[:upper:]' '[:lower:]')
      
      # Build avec optimisations frontend avanc√©es
      docker build \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --build-arg VITE_AUTH_SERVICE_URL=/api/auth \
        --build-arg VITE_PRODUCT_SERVICE_URL=/api/products \
        --build-arg VITE_ORDER_SERVICE_URL=/api/orders \
        --cache-from $CI_REGISTRY/$PROJECT_NAME_LOWER/frontend:latest \
        --tag $CI_REGISTRY/$PROJECT_NAME_LOWER/frontend:$CI_PIPELINE_ID \
        --tag $CI_REGISTRY/$PROJECT_NAME_LOWER/frontend:latest \
        --target production \
        --label "service.type=frontend-web" \
        --label "framework=vue.js" \
        --label "server=nginx" \
        --label "ci.pipeline.id=$CI_PIPELINE_ID" \
        .
      
      docker push $CI_REGISTRY/$PROJECT_NAME_LOWER/frontend:$CI_PIPELINE_ID
      docker push $CI_REGISTRY/$PROJECT_NAME_LOWER/frontend:latest
      
      echo "‚úÖ Image frontend build√©e: $(docker images --format 'table {{.Repository}}:{{.Tag}}\t{{.Size}}' | grep frontend)"
    - echo "‚úÖ Frontend build termin√© avec succ√®s"
  artifacts:
    reports:
      dotenv: build-frontend.env
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

test-frontend:
  stage: test
  image: node:18-bullseye
  variables:
    NODE_ENV: test
    VITE_AUTH_SERVICE_URL: http://localhost:3001
    VITE_PRODUCT_SERVICE_URL: http://localhost:3000
    VITE_ORDER_SERVICE_URL: http://localhost:3002
  script:
    - echo "üß™ Tests sp√©cialis√©s frontend Vue.js avec composants..."
    - cd frontend
    - npm ci --prefer-offline --no-audit
    - |
      # Tests frontend complets
      echo "üñ•Ô∏è Tests du frontend Vue.js..."
      npm run test:unit || npm run test || echo "‚ö†Ô∏è Tests frontend non configur√©s"
      
      # Build de production pour validation
      echo "üèóÔ∏è Test du build de production..."
      npm run build
      
      # V√©rifications sp√©cifiques frontend
      if [ -d "dist" ]; then
        echo "‚úÖ Build dist/ g√©n√©r√© ($(du -sh dist | cut -f1))"
        echo "FRONTEND_BUILD_SIZE=$(du -sh dist | cut -f1)" >> ../build-frontend.env
      fi
      
      if [ -f "src/App.vue" ]; then
        echo "‚úÖ App.vue principal d√©tect√©"
      fi
      
      if [ -d "src/components" ]; then
        echo "‚úÖ Composants Vue.js d√©tect√©s ($(find src/components -name '*.vue' | wc -l) fichiers)"
      fi
  artifacts:
    paths:
      - frontend/dist/
      - frontend/coverage/
      - build-frontend.env
    reports:
      coverage_report:
        coverage_format: cobertura
        path: frontend/coverage/cobertura-coverage.xml
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"