# ===================================
# Template Build - Order Service (GitLab)
# Adapt√© depuis GitHub Actions matrix strategy
# ===================================

build-order-service:
  stage: build
  image: docker:24-dind
  services:
    - docker:24-dind
  variables:
    SERVICE_NAME: order-service
    SERVICE_PATH: services/order-service
    DOCKERFILE_PATH: services/order-service/Dockerfile
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - echo "üì¶ Build optimis√© order-service avec int√©grations services..."
    - cd services/order-service
    - PROJECT_NAME_LOWER=$(echo $CI_PROJECT_PATH | tr '[:upper:]' '[:lower:]')
    - |
      # Build avec m√©tadonn√©es de service de commandes (adapt√© de GitHub Actions)
      docker build \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        --cache-from $CI_REGISTRY/$PROJECT_NAME_LOWER/order-service:latest \
        --tag $CI_REGISTRY/$PROJECT_NAME_LOWER/order-service:$CI_PIPELINE_ID \
        --tag $CI_REGISTRY/$PROJECT_NAME_LOWER/order-service:latest \
        --target production \
        --label "service.type=order-management" \
        --label "service.integrations=product-service,auth-service" \
        --label "ci.pipeline.id=$CI_PIPELINE_ID" \
        --label "ci.commit.sha=$CI_COMMIT_SHORT_SHA" \
        --label "ci.branch=$CI_COMMIT_BRANCH" \
        .
      
      docker push $CI_REGISTRY/$PROJECT_NAME_LOWER/order-service:$CI_PIPELINE_ID
      docker push $CI_REGISTRY/$PROJECT_NAME_LOWER/order-service:latest
      
      echo "‚úÖ Image order-service build√©e: $(docker images --format 'table {{.Repository}}:{{.Tag}}\t{{.Size}}' | grep order-service)"
    - echo "‚úÖ Order-service build termin√© avec succ√®s"
  cache:
    key: $CI_COMMIT_REF_SLUG-order
    paths:
      - .docker/
  artifacts:
    when: always
    paths:
      - services/order-service/package.json
    expire_in: 1 hour
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"